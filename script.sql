CREATE DATABASE Udemy;
USE Udemy;

CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Username VARCHAR(50) NOT NULL UNIQUE,
    Email VARCHAR(100) NOT NULL UNIQUE,
    PasswordHash VARCHAR(255) NOT NULL,
    Role ENUM('Admin', 'Teacher', 'Student') NOT NULL,
    Status ENUM('Pending', 'Activated', 'Suspended') DEFAULT 'Pending'
);

CREATE TABLE Categories (
    CatID INT AUTO_INCREMENT PRIMARY KEY,
    CatName VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE Courses (
    CourseID INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(255) NOT NULL,
    Description TEXT NOT NULL,
    Photo VARCHAR(255),
    MediaType ENUM('Video', 'Document') NOT NULL,
    MediaURL VARCHAR(255) NOT NULL,
    Status ENUM('Pending', 'Approved', 'Declined') DEFAULT 'Pending',
    TeacherID INT NOT NULL,
    CatID INT NOT NULL,
    FOREIGN KEY (TeacherID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (CatID) REFERENCES Categories(CatID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Tags (
    TagID INT AUTO_INCREMENT PRIMARY KEY,
    TagName VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE CourseTags (
    CourseID INT NOT NULL,
    TagID INT NOT NULL,
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (TagID) REFERENCES Tags(TagID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Enrollments (
    CourseID INT NOT NULL,
    StudentID INT NOT NULL,
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (StudentID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);
